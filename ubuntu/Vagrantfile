# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/xenial64"

  config.ssh.username = "vagrant"
  config.ssh.insert_key = true
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 30000, host: 33333

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.11"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  
  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
    vb.memory = "4096"
	vb.cpus = "2"
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
  
	add-apt-repository ppa:ubuntu-toolchain-r/test
	apt-get update
	apt-get install -y wget git build-essential
	apt-get install -y systemtap systemtap-sdt-dev bison flex libtool cmake g++ libncurses5-dev ant libelf-dev automake
	apt-get install -y openjdk-8-jdk
	apt-get install -y vim ctags
	
	export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
	
	# to build c++ 11
	apt-get install -y gcc-8 g++-8
	apt-get install -y cmake3
	
	update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8
	
	cd /home/vagrant
	mkdir bin
	ln -sf /usr/bin/cmake3 /home/vagrant/bin/cmake
	chown -R vagrant /home/vagrant/bin
	echo 'export PATH=/home/vagrant/bin:$PATH' >> /home/vagrant/.bashrc
	
	# configure astyle
	if [ ! -d /home/vagrant/astyle-install]; then
		cd /home/vagrant
		mkdir astyle-install
		cd astyle-install
		wget https://jaist.dl.sourceforge.net/project/astyle/astyle/astyle%203.1/astyle_3.1_linux.tar.gz -O astyle.tar.gz
		tar -xzf astyle.tar.gz
		cd astyle
		cmake .
		make
		make install
	fi
	
	cd /vagrant/.git/hooks
	wget https://github.com/hgryoo/cubrid-vagrant-dev/raw/master/pre-commit
	chmod +x pre-commit
	chown vagrant pre-commit
	
	cd /home/vagrant/bin
	wget https://github.com/hgryoo/cubrid-vagrant-dev/raw/master/indent
	chmod +x indent
	chown vagrant indent
	
	git config --global hooks.indent /home/vagrant/bin/indent
	
	cd /vagrant
	
	if [ ! -d cubrid ]; then
		git clone --recurse-submodules https://github.com/hgryoo/cubrid.git hgryoo_cubrid
		chown -R vagrant hgryoo_cubrid
	fi
	  
	if [ ! -d myenv ]; then
		git clone https://github.com/hgryoo/MyCentOSEnv myenv
		chown -R vagrant myenv
	fi
  SHELL
end
